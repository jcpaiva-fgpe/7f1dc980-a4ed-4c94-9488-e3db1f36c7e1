<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vad är objektorienterad programmering (OOP)?</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Medan procedurprogrammering hänvisar till skrivprocedurer eller metoder som utför operationer på data, hänvisar objektorienterad programmering till att skapa objekt som innehåller både data och metoder som manipulerar dessa data.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Fördel:</font></font></h3> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">det är snabbare och lättare att utföra.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">underlättar struktureringen av programmen.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">följer principen DRY "Don't Repeat Yourself".</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">gör det enkelt att underhålla, felsöka och ändra din kod.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">möjliggör skapandet av återanvändbara applikationer med mindre kod och mindre utvecklingstid.</font></font></li> 
        </ul> 
        <p><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Obs:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> "Don't Repeat Yourself" (DRY)-principen hänvisar till minskningen av kodupprepning, extrahera koden som är vanlig i olika delar av applikationen, placera dem på en enda plats, vilket gör att de kan återanvändas istället för upprepning.</font></font></p> 
        <hr> 
        <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vad är klasser och objekt?</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Klasser och objekt utgör de två huvudaspekterna av objektorienterad programmering.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Följande tabell visar skillnaden mellan klasser och objekt:</font></font></p> 
        <table border="1" cellpadding="1" cellspacing="1" style="width:100%"> 
         <thead> 
          <tr> 
           <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">klass</font></font></th> 
           <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">objekt</font></font></th> 
          </tr> 
         </thead> 
         <tbody> 
          <tr> 
           <td><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Frukt</font></font></td> 
           <td> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Äpple</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Banan</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Mango</font></font></p> </td> 
          </tr> 
          <tr> 
           <td><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bil</font></font></td> 
           <td> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Volvo</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Audi</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Toyota</font></font></p> </td> 
          </tr> 
         </tbody> 
        </table> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Därför måste vi förstå en klass som en mall för att skapa objekt. </font><font style="vertical-align: inherit;">Ett objekt kommer att vara en </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">instans</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> av en klass.</font></font></p> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">När vi skapar ett objekt ärver det alla variabler och metoder i klassen.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Skapa en klass i Java.</font></font></h3> 
        <p>Recordamos ahora, algunas de los conceptos que abordamos en los primeros ejercicios de Java.</p> 
        <p><strong>Los programas en Java</strong> (y en cualquier lenguaje orientado a objetos) <strong>se organizan en clases</strong>.</p> 
        <p>Java nos obliga a que <strong>en cada programa haya al menos una clase</strong>, en concreto una <strong>clase pública</strong>.</p> 
        <p><code>public class OOP {</code></p> 
        <p><code>}</code></p> 
        <p>Es importante recordar que <strong>el nombre del fichero tiene que coincidir exactamente con el nombre de la clase</strong>, teniendo cuidado con las mayúsculas y minúsculas, que en Java son caracteres distintos.</p> 
        <p><tt>OOP.java</tt></p> 
        <p>Java nos obliga a que <strong>en cada aplicación haya un método main</strong>, que es por donde empezará a ejecutarse el código de la misma; es lo que se llama el punto de entrada de la aplicación.</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Nedan är det grundläggande skelettet för en Java-applikation:</font></font></p> 
        <blockquote> 
         <p><code>public class OOP {<br> <br> &nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // TODO code application logic here<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Normalt skrivs varje klass i en separat fil. </font><font style="vertical-align: inherit;">Men så att vi kan fortsätta använda JuezLTI kommer vi att definiera alla klasser i en enda fil, med hänsyn till att endast klassen som innehåller metoden </font></font><code>main</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">kommer att ha modifieraren </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Alla andra klasser kommer att placeras efter den slutliga spannet för den offentliga klassen.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exempel:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Nedan finns två klasser som skulle definieras tillsammans i en enda OOP.java-fil:</font></font></p> 
        <blockquote> 
         <p><code>package oop;</code></p> 
         <p><code>public class OOP {<br> <br> &nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Creando una clase");<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
         <p><code>class SubClase {<br> &nbsp; int x = 5;<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Träning:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Till följande publika klass, som innehåller metoden</font></font><code>main()</code></p> 
        <blockquote> 
         <p><code>package oop;</code></p> 
         <p><code>public class OOP {</code></p> 
         <p><br> <code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Creando una clase");<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Lägg till klassen </font></font><code>Modulo</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">:</font></font></p> 
        <blockquote> 
         <p><code>class Modulo {<br> &nbsp; int nota = 8;<br> }</code></p> 
        </blockquote> 
        <p>&nbsp;</p></body></html>