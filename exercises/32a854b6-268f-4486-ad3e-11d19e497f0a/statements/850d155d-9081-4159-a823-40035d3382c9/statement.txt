<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Nesneye Yönelik Programlama (OOP) nedir?</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Prosedürel programlama, veriler üzerinde işlem gerçekleştiren prosedürler veya yöntemler yazma anlamına gelirken, Nesne Yönelimli Programlama, hem verileri hem de bu verileri işleyen yöntemleri içeren nesneler oluşturmayı ifade eder.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Avantaj:</font></font></h3> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">yürütmek daha hızlı ve daha kolaydır.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">programların yapılandırılmasını kolaylaştırır.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">DRY "Kendini Tekrar Etme" ilkesini takip eder.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">kodunuzu korumayı, hata ayıklamayı ve değiştirmeyi kolaylaştırır.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">daha az kod ve daha az geliştirme süresi ile yeniden kullanılabilir uygulamaların oluşturulmasını sağlar.</font></font></li> 
        </ul> 
        <p><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Not:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> "Kendini Tekrar Etme" (DRY) ilkesi, kod tekrarının azaltılmasını, uygulamanın çeşitli bölümlerinde ortak olan kodun çıkarılmasını, tek bir yere yerleştirilmesini ve bunun yerine yeniden kullanılmasına izin verilmesini ifade eder. tekrarlama.</font></font></p> 
        <hr> 
        <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sınıflar ve Nesneler nedir?</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sınıflar ve nesneler, Nesne Yönelimli Programlamanın iki ana yönünü oluşturur.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Aşağıdaki tablo, sınıflar ve nesneler arasındaki farkı gösterir:</font></font></p> 
        <table border="1" cellpadding="1" cellspacing="1" style="width:100%"> 
         <thead> 
          <tr> 
           <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">sınıf</font></font></th> 
           <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">nesneler</font></font></th> 
          </tr> 
         </thead> 
         <tbody> 
          <tr> 
           <td><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Meyve</font></font></td> 
           <td> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Elma</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Muz</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Mango</font></font></p> </td> 
          </tr> 
          <tr> 
           <td><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Araba</font></font></td> 
           <td> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Volvo</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">audi</font></font></p> <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">toyota</font></font></p> </td> 
          </tr> 
         </tbody> 
        </table> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bu nedenle, bir sınıfı nesne oluşturma için bir şablon olarak anlamalıyız. </font><font style="vertical-align: inherit;">Bir nesne bir sınıfın </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">örneği</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> olacaktır .</font></font></p> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bir nesne oluşturduğumuzda, sınıfın tüm değişkenlerini ve yöntemlerini devralır.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Java'da bir sınıf oluşturun.</font></font></h3> 
        <p>Recordamos ahora, algunas de los conceptos que abordamos en los primeros ejercicios de Java.</p> 
        <p><strong>Los programas en Java</strong> (y en cualquier lenguaje orientado a objetos) <strong>se organizan en clases</strong>.</p> 
        <p>Java nos obliga a que <strong>en cada programa haya al menos una clase</strong>, en concreto una <strong>clase pública</strong>.</p> 
        <p><code>public class OOP {</code></p> 
        <p><code>}</code></p> 
        <p>Es importante recordar que <strong>el nombre del fichero tiene que coincidir exactamente con el nombre de la clase</strong>, teniendo cuidado con las mayúsculas y minúsculas, que en Java son caracteres distintos.</p> 
        <p><tt>OOP.java</tt></p> 
        <p>Java nos obliga a que <strong>en cada aplicación haya un método main</strong>, que es por donde empezará a ejecutarse el código de la misma; es lo que se llama el punto de entrada de la aplicación.</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bir Java uygulamasının temel iskeleti aşağıdadır:</font></font></p> 
        <blockquote> 
         <p><code>public class OOP {<br> <br> &nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // TODO code application logic here<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Normalde her sınıf ayrı bir dosyaya yazılır. </font><font style="vertical-align: inherit;">Ancak JuezLTI'yi kullanmaya devam edebilmemiz için, yalnızca yöntemi içeren sınıfın </font></font><code>main</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">değiştiricisine sahip olacağını dikkate alarak tüm sınıfları tek bir dosyada tanımlayacağız </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Diğer tüm sınıflar, o genel sınıfın kapanış kümesinden sonra yerleştirilecektir.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Aşağıda, tek bir OOP.java dosyasında birlikte tanımlanacak iki sınıf bulunmaktadır:</font></font></p> 
        <blockquote> 
         <p><code>package oop;</code></p> 
         <p><code>public class OOP {<br> <br> &nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Creando una clase");<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
         <p><code>class SubClase {<br> &nbsp; int x = 5;<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Egzersiz yapmak:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Yöntemi içeren aşağıdaki genel sınıfa</font></font><code>main()</code></p> 
        <blockquote> 
         <p><code>package oop;</code></p> 
         <p><code>public class OOP {</code></p> 
         <p><br> <code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Creando una clase");<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sınıfı ekleyin </font></font><code>Modulo</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">:</font></font></p> 
        <blockquote> 
         <p><code>class Modulo {<br> &nbsp; int nota = 8;<br> }</code></p> 
        </blockquote> 
        <p>&nbsp;</p></body></html>