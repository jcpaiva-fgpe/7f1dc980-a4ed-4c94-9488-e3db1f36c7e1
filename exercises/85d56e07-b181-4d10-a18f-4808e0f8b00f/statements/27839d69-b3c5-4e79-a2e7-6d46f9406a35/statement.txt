<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sabit , </font><strong><font style="vertical-align: inherit;">program yürütme sırasında değiştirilemeyen bir değeri depolayan bellekteki </font></strong></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">bir</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> alandır </font><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Sabit, değişken gibidir, ancak değişkenden farklı olarak, değişemeyen sabit bir değer depolar.</font></font><strong><font style="vertical-align: inherit;"></font></strong><font style="vertical-align: inherit;"></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bir sabite bildirimi sırasında değeri atanmalıdır, çünkü o zaman üzerinde herhangi bir atama işlemi yapılamaz (gerçekten, tavsiye edilmesine rağmen bildirimde bir değer verilmesi gerekli değildir, ancak yalnızca bir atama yapılabilir. üzerinde işlem). </font><font style="vertical-align: inherit;">Salt okunur bir öğe olacak, içerdiği değeri programımızda kullanabileceğiz ancak değiştiremeyeceğiz.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bir sabitin sakladığı değer, program yürütme sırasında değişemez.&nbsp;</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sabitler, bir programın yürütülmesi sırasında değişmemesi gereken değerleri tanımlamak için kullanılır:</font></font></p> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Çünkü </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">asla değişmeyen verileri temsil ederler</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . </font><font style="vertical-align: inherit;">Örneğin, her zaman 3.1416'ya eşit olacak olan "pi" sayısı.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Çünkü </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">programın yürütülmesi sırasında değişmeyecek değerleri temsil ederler</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . </font><font style="vertical-align: inherit;">Örneğin, bir faturalama programında KDV adında bir sabit tanımlayabilir ve bunu %21'e ayarlayabilirsiniz. </font><font style="vertical-align: inherit;">Bu değer, programın yürütülmesi sırasında değişmeyecektir. </font><font style="vertical-align: inherit;">Değişirse, sabit bildirimdeki, kaynak koddaki değeri değiştirmeniz ve yeniden derlemeniz gerekir.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Doğrudan kodda içerdikleri değeri kullanmak yerine neden sabitleri kullanalım?&nbsp;</font></font></p> 
        <ul> 
         <li>Primero <strong>por claridad</strong>, siempre será más legible leer la constante pi, que el número 3,1416. O la constante IVA, que 21%.</li> 
         <li>Segundo, porque <strong>si alguna vez ese valor tiene que cambiar, solo tendré que cambiar el valor en la declaración de la constante</strong> y automáticamente estará cambiado en el resto del código en el que se usa. De otra forma, tendría que cambiar uno a uno todos los usos de dicho valor en mi código.</li> 
        </ul> 
        <h3>Sintaxis para definir una constante:</h3> 
        <blockquote> 
         <p><code>final tipo nombre = valor;</code></p> 
        </blockquote> 
        <p>donde:</p> 
        <ul> 
         <li>La palabra clave final es la que establece que lo que se está definiendo es una constante. La palabra final indica que el valor que se le asigne en la declaración será su valor final, que se mantendrá inalterable durante todo el programa.&nbsp;</li> 
         <li>El nombre de la constante debe ir, por convención, todo en mayúscula. Si está formado por varias palabras, éstas irán separadas por _.</li> 
         <li><strong><s>Si intentamos variar su contenido, el compilador dará un error.</s></strong></li> 
        </ul> 
        <h3>Ejemplos:</h3> 
        <blockquote> 
         <p><code>final int IVA = 21;<br> final double PI = 3.1416;<br> final int EDAD_MINIMA = 0;</code></p> 
        </blockquote> 
        <h3>Ejercicio:</h3> 
        <p>El ejercicio anterior solicitaba la declaración e inicialicialización de las siguientes variables:</p> 
        <blockquote> 
         <p><code>numero </code>de tipo entero.<br> <code>numeroReal </code>de tipo float.<br> <code>letra </code>de tipo carácter.<br> <code>estaLloviendo </code>de tipo booleano.</p> 
        </blockquote> 
        <p>Los valores de cada una de esas variables será el siguiente.</p> 
        <blockquote> 
         <p><code>numero</code>: 18<br> <code>numeroReal</code>: 3,14<br> <code>letra</code>: P<br> <code>estaLloviendo</code>: false</p> 
        </blockquote> 
        <p><strong>Amplía dicho ejercicio, de manera que se inicialice también la constante PI con el valor 3.14.</strong></p> 
        <p>El resultado de la aplicación será el que se puede observar en el <em>OUTPUT</em>.</p></body></html>