<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Escreva um programa Java que elimine de um array os inteiros que se repetem nele, de tal forma que deixe apenas o primeiro.</font></font></p> 
        <p><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exemplo:</font></font></strong></p> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Dada a matriz de inteiros {1, 2, 1, 8, 5, 2, 8, 2, 4, 9, 12, 8, 1, 2}, ela será transformada em uma matriz: {1, 2, 8, 5, 4, 9, 12}</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Dada a matriz de inteiros {8, 20, 555, 555, 555, 8, 1, 9, 2, 555, 8, 20, 80}, ela será transformada na matriz: {8, 20, 555, 1, 9, 2, 80}</font></font></li> 
        </ul> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ENTRADA</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A entrada começa com um número indicando quantos casos de teste serão processados.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Cada caso será composto por:</font></font></p> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Uma primeira linha com o número L de elementos da matriz, onde L &gt; 0</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Um segundo com os L elementos do referido array separados por um espaço.&nbsp;</font></font></li> 
        </ul> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">SAÍDA</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Para cada caso de teste, o programa escreverá o conteúdo do array após remover os números repetidos.</font></font></p> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">RESTRIÇÕES</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O problema será resolvido usando a seguinte decomposição funcional:</font></font></p> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Uma função que recebe uma matriz de inteiros e um inteiro positivo como argumento e retorna a posição da matriz da primeira ocorrência desse número. </font><font style="vertical-align: inherit;">A função retornará -1 se o número passado como argumento não aparecer no array.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Uma função que recebe um array de inteiros como argumento e retorna um array diferente no qual os números repetidos foram removidos, de modo que cada número apareça apenas uma vez, na mesma ordem em que aparecem no array original.&nbsp; </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ATENÇÃO:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vamos programar esta função com cuidado, otimizando o uso da memória. </font><font style="vertical-align: inherit;">Para fazer isso, você criará um array auxiliar do mesmo tamanho do original, no qual introduziremos apenas os números não repetidos. </font><font style="vertical-align: inherit;">Pode haver posições vazias nesta matriz (no valor de inicialização), e devemos acompanhar quantas dessas posições na matriz contêm números válidos para resolver o problema. </font><font style="vertical-align: inherit;">Assim que soubermos quantos são esses números não repetidos, criaremos um novo array desse tamanho e passaremos os números da solução para ele. </font><font style="vertical-align: inherit;">Este será o array que retornaremos, que terá o tamanho certo para a solução buscada. </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Ou seja, NÃO podemos criar um novo array para cada novo número não repetido que encontramos.</font></font></strong></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O programa principal, para cada caso, imprimirá o resultado da rotação da string nas N posições para a direita ou para a esquerda.</font></font></p> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">OTIMIZAÇÃO ALGORITMICA</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">JuezLTI não levará isso em consideração ao decidir se o exercício está correto ou não, mas tentaremos programá-lo da maneira mais otimizada possível, </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">reduzindo ao máximo o uso de memória</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . </font><font style="vertical-align: inherit;">Para isso, você deve observar e capturar em seu algoritmo a forma de proceder descrita para a segunda função na seção "Restrições".</font></font></p></body></html>