<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">statiska metoder.</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vi kommer ofta att se Java-program som har attribut och metoder med modifierare </font></font><code>static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">En metod skapad med modifieraren </font></font><code>static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">innebär att den kan nås utan att skapa ett objekt i klassen, till skillnad från modifieraren </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, vilket innebär att den endast kan nås genom instanser (objekt) av klassen.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exempel:</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">I följande kod skapar vi en statisk metod för underklassen för att visa ett meddelande med den användning som kan ges till parametrarna för klassen. </font><font style="vertical-align: inherit;">För att använda en sådan metod är det inte nödvändigt att instansiera något objekt i klassen:</font></font></p> 
        <blockquote> 
         <p><code>package oop_ejemplos;</code></p> 
         <p><code>public class OOP_ejemplos {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>SubClase.</strong>uso();<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
         <p><code>class SubClase {<br> &nbsp; int x = 5;<br> &nbsp; int y = 7;<br> &nbsp; &nbsp;<br> &nbsp; <strong>static</strong> void uso() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("x indica el ancho e y el alto");<br> &nbsp; }<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Träning</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Ändra föregående övning och lägg till en statisk metod&nbsp; </font></font><code>calificacionMaxima()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">som returnerar det högsta betyget som tillåts i modulen ( </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">10</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ). </font><font style="vertical-align: inherit;">Applikationen kommer att begära med tangentbord, i metoden </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, betyget för modulen, tills betyget är mindre än eller lika med det högsta tillåtna betyget.</font></font></p></body></html>