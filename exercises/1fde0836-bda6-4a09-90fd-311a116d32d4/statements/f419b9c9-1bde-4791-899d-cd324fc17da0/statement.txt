<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">statik yöntemler.</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Değiştiricilere sahip öznitelikleri ve yöntemleri olan Java programlarını sık sık göreceğiz </font></font><code>static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Değiştiriciyle oluşturulan bir yöntem, değiştiriciden </font></font><code>static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">farklı olarak, sınıfın bir nesnesi oluşturulmadan erişilebileceği </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">anlamına gelir; bu, yalnızca sınıfın örnekleri (nesneleri) aracılığıyla erişilebileceği anlamına gelir.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek:</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Aşağıdaki kodda, sınıfın parametrelerine verilebilecek kullanım ile bir mesaj görüntülemek için Alt Sınıfın statik bir yöntemini oluşturuyoruz. </font><font style="vertical-align: inherit;">Böyle bir yöntemi kullanmak için sınıfın herhangi bir nesnesini başlatmak gerekli değildir:</font></font></p> 
        <blockquote> 
         <p><code>package oop_ejemplos;</code></p> 
         <p><code>public class OOP_ejemplos {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>SubClase.</strong>uso();<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
         <p><code>class SubClase {<br> &nbsp; int x = 5;<br> &nbsp; int y = 7;<br> &nbsp; &nbsp;<br> &nbsp; <strong>static</strong> void uso() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("x indica el ancho e y el alto");<br> &nbsp; }<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Egzersiz yapmak</font></font></h3> 
        <p><font style="vertical-align: inherit;"></font><code>calificacionMaxima()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modülde izin verilen maksimum notu döndüren </font><font style="vertical-align: inherit;">statik bir yöntem ekleyerek önceki alıştırmayı değiştirin&nbsp; ( </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">10</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ). </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Uygulama, klavye ile, yöntemde , not izin verilen maksimum nottan küçük veya ona eşit olana kadar modülün notunu </font><font style="vertical-align: inherit;">isteyecektir .</font></font></p></body></html>