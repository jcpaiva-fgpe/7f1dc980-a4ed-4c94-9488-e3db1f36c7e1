<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Parametreler ve argümanlar</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Çoğu işlev </font><font style="vertical-align: inherit;">, çözdüğü sorunu genelleştirmek için ekteki algoritma kodunda kullanılacak olan </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">GİRİŞ PARAMETRELERİ'ni kullanır.</font></font></strong><font style="vertical-align: inherit;"></font></p> 
        <blockquote> 
         <p><code><a href="https://translate.google.com/website?sl=es&amp;tl=tr&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html%23pow-double-double-">Math.pow</a>(double&nbsp;a, double&nbsp;b)</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bu girdi parametreleri, işlevin algoritmasının çözdüğü sorunu çözmek için ihtiyaç duyduğu verileri genel bir şekilde temsil eden&nbsp; </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">işlevin dahili değişkenlerinden</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> başka bir şey değildir .</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Parametre adı verilen bu işlev-iç değişkenleri </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">yalnızca işlev</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> içinde bulunur ve algoritma kodunuzda yalnızca işlev içinde kullanılabilir.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Fonksiyonun parametre adı verilen bu özel dahili değişkenleri, fonksiyonun </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">kullanıldığı anda, çağrıldığında somut ve gerçek değerlerini alacaktır</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ve bunlar fonksiyonun her kullanımında farklı olabilir. </font><font style="vertical-align: inherit;">Çağrı sırasında fonksiyona geçirilen değerlere </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">girdi ARGUMENTS</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> denir .&nbsp;</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Yani </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">bir fonksiyonun parametreleri, fonksiyon çağrısı sırasında argüman olarak iletilen değerleri başlangıç ​​değeri (BAŞLATMA) olarak alan fonksiyonun dahili değişkenleridir</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> .</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">İçerdikleri çarpım tablosuna karşılık gelen sayının tabloların hem üstbilgisinde hem de altbilgisinde görünmesi ilginç olurdu.</font></font></p> 
        <p>Podríamos intentar concatenar la variable <code>contador</code> en el mensaje:</p> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; static void cabeceraTablaMultiplicar() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA " + <s>contador</s> + " **");<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p>Pero, esto generaría el error <code>"cannot find symbol"</code>, ya que contador es una variable local al método <code>main()</code> y no puede ser utilizada fuera del bloque correspondiente a dicho método <code>main()</code>.</p> 
        <p>La manera correcta de pasar el valor de la variable contador al método <code>cabeceraTablaMultiplicar()</code> es a través de la invocación:</p> 
        <blockquote> 
         <p><code>cabeceraTablaMultiplicar(contador)</code></p> 
        </blockquote> 
        <p>Pero, debe haber una correlación entre los argumentos que se envían entre los paréntesis y los que son recogidos por el método invocado, por lo que deberemos modificar las declaraciones de los métodos <code>cabeceraTablaMultiplicar()</code> y <code>pieTablaMultiplicar()</code>:</p> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static void cabeceraTablaMultiplicar(int contador) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA " + contador + " **");<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p>Hay que señalar que no es necesario que las variables que se utilizan en la invocación y la que se utiliza en la definición del método tengan el mismo nombre.</p> 
        <h3>Ejercicio</h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sayacı yönteme dahil etmenin yanı sıra, </font></font><code>pieTablaMultiplicar()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">her tam çarpım tablosunu oluşturan kodu bir yönteme taşır.</font></font><code>tablaDeUnNumero(contador).</code></p></body></html>