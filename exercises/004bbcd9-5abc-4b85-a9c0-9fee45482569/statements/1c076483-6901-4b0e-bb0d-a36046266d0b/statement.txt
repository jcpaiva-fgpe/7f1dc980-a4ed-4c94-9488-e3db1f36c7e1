<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bir tamsayı alan ve ürkütücü olup olmadığını değerlendiren bir Java programı yazın; burada bir veri numarası, baştan sona olduğu gibi aynısını baştan sona okuyan bir sayıdır.</font></font></p> 
        <p><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek:</font></font></strong></p> 
        <ul> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">30303 sayısı capicua'dır.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">4576754 sayısı capicúa'dır.</font></font></li> 
         <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">4994 sayısı capicua'dır.</font></font></li> 
        </ul> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">GİRİŞ</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Giriş, kaç test senaryosunun işleneceğini gösteren bir sayı ile başlar.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vakaların her biri, capicua olup olmadığını değerlendirmek için N numaralı bir satırdan oluşturulacaktır, burada 0&lt;= N &gt;= 2147483647 (int)&nbsp;</font></font></p> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ÇIKIŞ</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Her test durumu için, sayının bu özelliğe uyup uymadığına bağlı olarak program CAPICÚA veya NOT CAPICÚA yazacaktır.</font></font></p> 
        <h3><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">KISITLAMALAR</font></font></strong></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sorun, aşağıdaki işlevsel ayrıştırma kullanılarak çözülecektir:</font></font></p> 
        <ul> 
         <li>Una función que reciba un número entero positivo como argumento y calcule y devuelva la cantidad de cifras que tiene dicho número. La función lanzará la excepción IllegalArgumentException en caso de que el número recibido como argumento sea un número negativo.</li> 
         <li>Una función que reciba un número entero positivo como argumento y devuelva dicho número descompuesto en cifras en un array de enteros, donde cada cifra del número ocupará una posición del array (la cifra más a la izquierda del número, ocupará la posición inicial del array). La función lanzará la excepción IllegalArgumentException si el número pasado como argumento es negativo.</li> 
         <li>Una función que reciba un array de enteros&nbsp;como argumento y evalúe y devuelva si dicho array contiene la misma secuencia de números leída de delante a atrás que de atrás a adelante.&nbsp;</li> 
        </ul> 
        <p>El programa principal, para cada caso, imprimirá si el número es capicúa o no, e imprimirá el mensaje de error correspondiente si el caso es un número negativo. Para resolver el problema hará uso de las funciones.</p> 
        <h3>OPTIMIZACIÓN ALGORÍTMICA</h3> 
        <p>JuezLTI no lo va a tener en cuenta a la hora de dar como correcto o no el ejercicio, pero vamos a intentar programar de la manera más óptima posible, <strong>reduciendo al máximo el uso de memoria</strong> y <strong>reduciendo al máximo el tiempo de ejecución</strong>.</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">&nbsp;Bunu yapmak için, alıştırmayı yardımcı bir dizi oluşturmadan çözebileceğinizi (bellek kullanımını optimize edin) ve alıştırmayı tüm diziyi, sadece yarısını, yani en kısa sürede </font><font style="vertical-align: inherit;">çözmeden çözebileceğinizi hesaba </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">katmalısınız</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . sayı göze çarpmadığından, kontrol etmeye devam etmek gerekli değildir ve ayrıca dizinin yalnızca yarısından geçerek sayının göze çarpar olup olmadığını bilebileceğim anlamında (yürütme süresinin kullanımını optimize edin). </font><font style="vertical-align: inherit;">Algoritmanızı iyi tasarlarsanız her iki optimizasyonu da gerçekleştirebilirsiniz.</font></font></p></body></html>