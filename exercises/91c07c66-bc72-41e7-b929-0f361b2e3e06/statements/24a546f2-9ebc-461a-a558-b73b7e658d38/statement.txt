<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Definição</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Uma função é uma parte de um programa ou </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">conjunto de instruções</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> com um nome, que </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">pode ser invocado</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> (chamado para executar) de outras partes do programa, quantas vezes desejar. </font><font style="vertical-align: inherit;">Em algumas linguagens, eles são chamados de sub-rotinas.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">As funções nos permitem dividir o trabalho de um programa em tarefas menores, separadas da parte principal.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Até agora, </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">chamamos</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> funções criadas por outros desenvolvedores, com, por exemplo </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=pt&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Scanner.html%23nextInt()"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Scanner.nextInt()</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ou </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=pt&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/PrintStream.html%23println(java.lang.String)"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">System.out.println()</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . </font><font style="vertical-align: inherit;">Nos casos anteriores, devemos preceder os nomes dos métodos, a classe a que pertencem ( </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=pt&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Scanner.html"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Scanner</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ), separados por um (.)</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exemplo</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Partindo de um exercício anterior, que mostrava tabuadas enquanto o usuário não pressionava um 0 no final de cada tabela, vamos usar um método&nbsp; </font></font><code>cabeceraTablaMultiplicar()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">para escrever um texto ("** START TABLE **") no início de cada uma das tabelas.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A declaração do método exigirá o </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">nome</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> , que será usado para invocá-lo, bem como outros modificadores que serão explicados posteriormente.</font></font></p> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; static void <strong>cabeceraTablaMultiplicar()</strong> {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA **");<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Esta declaração deve ser colocada fora do bloco do método </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, mas dentro do bloco da classe.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">As instruções que foram incorporadas ao método&nbsp; </font></font><code><strong>cabeceraTablaMultiplicar()</strong></code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">não serão executadas até que sejam chamadas a partir do método </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Vamos colocar esta chamada entre o </font></font><code>while</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">e o </font></font><code>for</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">:</font></font></p> 
        <blockquote> 
         <p><code>package tablasmultiplicar;<br> import java.util.Scanner;</code></p> 
         <p><code>public class TablasMultiplicar {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int contador = 1, seguir = 1;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Scanner sc = new Scanner(System.in);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (seguir != 0) {<br> <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Invocamos el método cabecera<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cabeceraTablaMultiplicar();</strong><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i = 0; i &lt;= 10; i++) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(contador + " x " + i + " = " + contador * i);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contador++;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seguir = sc.nextInt();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp; static void <strong>cabeceraTablaMultiplicar() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA **");<br> &nbsp;&nbsp;&nbsp; }</strong><br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exercício</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Crie e chame uma função, </font></font><code>pieTablaMultiplicar()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, que escreva o texto "** END TABLE **", seguido de uma linha em branco, no final de cada uma das tabuadas.</font></font></p></body></html>