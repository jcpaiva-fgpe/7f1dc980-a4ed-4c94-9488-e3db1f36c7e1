<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Definition</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A function is a part of a program or </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">set of instructions</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> with a name, which </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">can be invoked</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> (called to execute) from other parts of the program, as many times as desired. </font><font style="vertical-align: inherit;">In some languages, they are called subroutines.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Functions allow us to divide the work a program does into smaller tasks separate from the main part.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Until now, we have </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">called</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> functions created by other developers, com, for example </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=en&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Scanner.html%23nextInt()"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Scanner.nextInt()</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> or </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=en&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/PrintStream.html%23println(java.lang.String)"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">System.out.println()</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> . </font><font style="vertical-align: inherit;">In the previous cases, we must precede the names of the methods, the class to which they belong ( </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=en&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Scanner.html"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Scanner</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ), separated by a (.)</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Example</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Starting from a previous exercise, which showed multiplication tables while the user did not press a 0 at the end of each table, we are going to use a method&nbsp; </font></font><code>cabeceraTablaMultiplicar()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">to write a text ("** START TABLE **") at the beginning of each of the tables .</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">The method declaration will require the </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">name</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> , which will be used to invoke it, as well as other modifiers that will be explained later.</font></font></p> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; static void <strong>cabeceraTablaMultiplicar()</strong> {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA **");<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">This declaration must be placed outside the method block </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, but inside the class block.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Statements that have been built into the method&nbsp; </font></font><code><strong>cabeceraTablaMultiplicar()</strong></code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">will not be executed until it is called from the method </font></font><code>main()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">We will place this call between the </font></font><code>while</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">and the </font></font><code>for</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">:</font></font></p> 
        <blockquote> 
         <p><code>package tablasmultiplicar;<br> import java.util.Scanner;</code></p> 
         <p><code>public class TablasMultiplicar {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int contador = 1, seguir = 1;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Scanner sc = new Scanner(System.in);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (seguir != 0) {<br> <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Invocamos el m√©todo cabecera<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cabeceraTablaMultiplicar();</strong><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i = 0; i &lt;= 10; i++) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(contador + " x " + i + " = " + contador * i);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contador++;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seguir = sc.nextInt();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp; static void <strong>cabeceraTablaMultiplicar() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("** INICIO TABLA **");<br> &nbsp;&nbsp;&nbsp; }</strong><br> &nbsp;&nbsp; &nbsp;<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exercise</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Create and call a function, </font></font><code>pieTablaMultiplicar()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, that writes the text "** END TABLE **", followed by a blank line, at the end of each of the multiplication tables.</font></font></p></body></html>