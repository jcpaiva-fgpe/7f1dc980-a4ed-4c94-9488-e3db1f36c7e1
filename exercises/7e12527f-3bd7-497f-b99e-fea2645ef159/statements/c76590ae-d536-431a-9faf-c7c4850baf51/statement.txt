<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">För att fånga undantag kommer vi att använda undantagsfångststrukturen </font></font><code>try</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">- </font></font><code>catch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">- </font></font><code>finally</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">I grund och botten, för att fånga ett undantag, vad vi kommer att göra är att deklarera kodblock där det är möjligt för ett undantag att inträffa. </font></font><code>try </code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vi kommer att göra detta genom ett (försök) </font><font style="vertical-align: inherit;">block . </font><font style="vertical-align: inherit;">Om ett undantag inträffar inom dessa block, kastas ett undantag. </font><font style="vertical-align: inherit;">Dessa kastade undantag kan fångas med hjälp av block </font></font><code>catch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Det kommer att vara inom den här typen av block där hanteringen av undantag kommer att ske.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Syntax:</font></font></h3> 
        <blockquote> 
         <p><code>try {</code><br> <code>&nbsp;&nbsp;&nbsp; código que puede generar excepciones;<br> } catch (Tipo_excepcion_1 objeto_excepcion) {<br> &nbsp;&nbsp;&nbsp; Manejo de excepción de Tipo_excepcion_1;</code><br> <code>} catch (Tipo_excepcion_2 objeto_excepcion) {<br> &nbsp;&nbsp;&nbsp; Manejo de excepción de Tipo_excepcion_2;</code><br> <code>}</code><br> <code>...</code><br> <code>finally {<br> &nbsp;&nbsp;&nbsp; instrucciones que se ejecutan siempre<br> }</code></p> 
        </blockquote> 
        <p>En esta estructura, la parte <code>catch</code> puede repetirse tantas veces como excepciones diferentes se deseen capturar. La parte <code>finally</code> es opcional y, si aparece, solo podrá hacerlo una sola vez.</p> 
        <p>Cada <code>catch</code> maneja un tipo de excepción. Cuando se produce una excepción, se busca el <code>catch</code> que posea el manejador de excepción adecuado, será el que utilice el mismo tipo de excepción que se ha producido. Esto puede causar problemas si no se tiene cuidado, ya que la clase Exception es la superclase de todas las demás. Por lo que si se produjo, por ejemplo, una <code>excepción</code> de tipo <code>AritmethicException</code> y el primer <code>catch</code> captura el tipo genérico <code>Exception</code>, será ese <code>catch</code> el que se ejecute y no los demás.</p> 
        <p>Por eso el último <code>catch</code> debe ser el que capture excepciones genéricas y los primeros deben ser los más específicos. Lógicamente si vamos a tratar a todas las excepciones (sean del tipo que sean) igual, entonces basta con un solo <code>catch</code> que capture objetos <code>Exception</code>.</p> 
        <h3>Ejemplo:</h3> 
        <p>El siguiente programa en Java solicita al usuario la introducción de un número por teclado comprendido entre el 0 y el 100. Utilizando manejo de excepciones, controla la entrada de dicho número y vuelve a solicitarlo en caso de que ésta sea incorrecta.</p> 
        <blockquote> 
         <p><code>/*<br> &nbsp;* Ejercicio resuelto sobre manejo de excepciones.<br> &nbsp;* El programa solicita que el usuario introduzca por teclado<br> &nbsp;* un número entre 0 y 100, debiendo gestionarse la entrada<br> &nbsp;* por medio de excepciones.<br> &nbsp;*/</code></p> 
         <p><code>import java.io.*;</code></p> 
         <p><code>public class ejercicio_resuelto_excepciones {<br> &nbsp;&nbsp;&nbsp; public static void main(String[] args){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int numero=-1;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int intentos=0;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String linea;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedReader teclado = new BufferedReader(new InputStreamReader(System.in));<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print("Introduzca un número entre 0 y 100: ");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; linea = teclado.readLine();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numero = Integer.parseInt(linea);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(IOException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Error al leer del teclado.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(NumberFormatException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Debe introducir un número entre 0 y 100.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }finally{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intentos++;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }while (numero &lt; 0 || numero &gt; 100);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("El número introducido es: " + numero);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Número de intentos: " + intentos);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp; }<br> }</code></p> 
        </blockquote> 
        <h3>Ejercicio:</h3> 
        <p>En el&nbsp;ejemplo correspondiente al apartado Leer del teclado, se muestra la calificación en el módulo de Programación que introduce el usuario por teclado:</p> 
        <blockquote> 
         <p><code>import java.util.Scanner;</code></p> 
         <p><code>public class LecturaTeclado {</code></p> 
         <p><code>&nbsp; &nbsp; public static void main(String[] args) {<br> &nbsp; &nbsp; &nbsp; &nbsp; Scanner sc = new Scanner(System.in);<br> &nbsp; &nbsp; &nbsp; &nbsp; int miCalificacion = 0;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Dime la nota que me corresponde:");<br> &nbsp; &nbsp; &nbsp; &nbsp; miCalificacion = sc.nextInt();</code></p> 
         <p><code>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Mi nota en PROGRAMACION es: " + miCalificacion);<br> &nbsp; &nbsp; }</code></p> 
         <p><code>}</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Ändra koden ovan för att fånga </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=sv&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/javase/8/docs/api/java/util/InputMismatchException.html"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">InputMismatchException</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> om användaren anger ett flytande värde.</font></font></p></body></html>