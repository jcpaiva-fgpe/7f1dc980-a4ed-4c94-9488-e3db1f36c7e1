<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h3><font style="vertical-align: inherit;"></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Logical</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> operators </font><font style="vertical-align: inherit;">.</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A simple condition is one in which only one expression (with an operator such as those seen) is evaluated.&nbsp;</font></font></p> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">What if we want to evaluate two things, two conditions, two expressions, or even more than two? </font><font style="vertical-align: inherit;">Then we need to make use of compound conditions, which will be made up of several simple boolean expressions and a connector that serves to specify how those simple conditions should be joined to form the compound condition.&nbsp;</font></font></p> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A compound Boolean expression (or compound condition), is still a Boolean expression that can only evaluate, as a whole, to TRUE or FALSE.</font></font></p> 
        <p>&nbsp;</p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">These boolean expression connectors are called logical operators and are as follows:</font></font></p> 
        <ul> 
         <li><strong>Operador "AND"</strong>. Una expresión boolenada compuesta que usa el operador lógico AND para conectar las dos expresiones boolenas simples que la componen, será evaluada como verdadera cuando ambas expresiones booleanas simples sean verdaderas, y será falsa en cuanto una de ellas sea falsa.&nbsp;</li> 
         <li><strong>Operador "OR"</strong>. Una expresión booleana compuesta que usa el operador lógico OR para conectar las dos expresiones booleanas simples que la componen, será evaluada como verdadera cuando al menos una de las expresiones booleanas simples sea verdadera, y será falsa si las dos son falsas.</li> 
         <li><strong>Operador “XOR”</strong>. Una expresión booleana compuesta que usa el operador lógico XOR para conectar las dos expresiones booleanas simples que la componen, será evaluada como verdadera cuando una de las expresiones booleanas simples que la componen sea cierta y la otra sea falsa.</li> 
         <li><strong>Operador "NOT"</strong>. El operador lógico NOT no sirve para unir dos expresiones booleanas simples, sino simplemente para negar la lógica de una expresión booleana (simple o compuesta)</li> 
        </ul> 
        <p>Los operadores lógicos que podemos utilizar se muestran en la siguiente tabla:</p> 
        <table align="center" border="1" cellpadding="1" cellspacing="1"> 
         <caption>
          Operadores lógicos
         </caption> 
         <thead> 
          <tr> 
           <th scope="col" style="background-color:#9e9e9e; text-align:center">OPERADOR</th> 
           <th scope="col" style="background-color:#9e9e9e; text-align:center">USO</th> 
           <th scope="col" style="background-color:#9e9e9e; text-align:center">OPERACIÓN</th> 
          </tr> 
         </thead> 
         <tbody> 
          <tr> 
           <td style="text-align:center">&amp;&amp;</td> 
           <td style="text-align:center">a &amp;&amp; b</td> 
           <td style="text-align:center">a AND b</td> 
          </tr> 
          <tr> 
           <td style="text-align:center">||</td> 
           <td style="text-align:center">a || b</td> 
           <td style="text-align:center">a OR b</td> 
          </tr> 
          <tr> 
           <td style="text-align:center">!</td> 
           <td style="text-align:center">!a</td> 
           <td style="text-align:center">NOT a</td> 
          </tr> 
          <tr> 
           <td style="text-align:center">^</td> 
           <td style="text-align:center">a ^ b</td> 
           <td style="text-align:center">a XOR b<br> Resultado true si uno es true y el otro false</td> 
          </tr> 
         </tbody> 
        </table> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">You can see the result of most combinations </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=en&amp;hl=es&amp;client=webapp&amp;u=https://www.monografias.com/trabajos106/fundamentos-programacion-operadores/img6.png" target="_blank"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">here</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> .</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exercise:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">It reads 2 boolean values ​​(true and false) from the keyboard and displays the result of the 4 possible logical operations on them. </font><font style="vertical-align: inherit;">The ! </font><font style="vertical-align: inherit;">do it on the first of the boolean values.</font></font></p></body></html>