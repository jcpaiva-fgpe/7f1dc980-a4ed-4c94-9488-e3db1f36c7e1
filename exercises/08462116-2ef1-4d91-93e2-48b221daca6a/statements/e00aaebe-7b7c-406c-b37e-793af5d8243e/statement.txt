<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h3>Operadores <strong>lógicos</strong>.</h3>

<p>Una condición simple es aquella en la que solo se evalúa una expresión (con un operador como los vistos).&nbsp;</p>

<p>&nbsp;</p>

<p>¿Y si queremos evaluar dos cosas, dos condiciones, dos expresiones, o incluso más de dos? Entonces necesitamos hacer uso de condiciones compuestas, las cuales estarán formadas por varias expresiones booleanas simples y un conector que sirva para especificar cómo deben unirse esas condiciones simples para formar la condición compuesta.&nbsp;</p>

<p>&nbsp;</p>

<p>Una expresión booleana compuesta (o condición compuesta), sigue siendo una expresión booleana que solo puede evaluarse, en su conjunto, como VERDADERA o FALSA.</p>

<p>&nbsp;</p>

<p>Estos conectores de expresiones booleanas se llaman operadores lógicos y son los siguientes:</p>

<ul>
	<li><strong>Operador "AND"</strong>. Una expresión boolenada compuesta que usa el operador lógico AND para conectar las dos expresiones boolenas simples que la componen, será evaluada como verdadera cuando ambas expresiones booleanas simples sean verdaderas, y será falsa en cuanto una de ellas sea falsa.&nbsp;</li>
	<li><strong>Operador "OR"</strong>. Una expresión booleana compuesta que usa el operador lógico OR para conectar las dos expresiones booleanas simples que la componen, será evaluada como verdadera cuando al menos una de las expresiones booleanas simples sea verdadera, y será falsa si las dos son falsas.</li>
	<li><strong>Operador “XOR”</strong>. Una expresión booleana compuesta que usa el operador lógico XOR para conectar las dos expresiones booleanas simples que la componen, será evaluada como verdadera cuando una de las expresiones booleanas simples que la componen sea cierta y la otra sea falsa.</li>
	<li><strong>Operador "NOT"</strong>. El operador lógico NOT no sirve para unir dos expresiones booleanas simples, sino simplemente para negar la lógica de una expresión booleana (simple o compuesta)</li>
</ul>

<p>Los operadores lógicos que podemos utilizar se muestran en la siguiente tabla:</p>

<table align="center" border="1" cellpadding="1" cellspacing="1">
	<caption>Operadores lógicos</caption>
	<thead>
		<tr>
			<th scope="col" style="background-color:#9e9e9e; text-align:center">OPERADOR</th>
			<th scope="col" style="background-color:#9e9e9e; text-align:center">USO</th>
			<th scope="col" style="background-color:#9e9e9e; text-align:center">OPERACIÓN</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td style="text-align:center">&amp;&amp;</td>
			<td style="text-align:center">a &amp;&amp; b</td>
			<td style="text-align:center">a AND b</td>
		</tr>
		<tr>
			<td style="text-align:center">||</td>
			<td style="text-align:center">a || b</td>
			<td style="text-align:center">a OR b</td>
		</tr>
		<tr>
			<td style="text-align:center">!</td>
			<td style="text-align:center">!a</td>
			<td style="text-align:center">NOT a</td>
		</tr>
		<tr>
			<td style="text-align:center">^</td>
			<td style="text-align:center">a ^ b</td>
			<td style="text-align:center">a XOR b<br>
			Resultado true si uno es true y el otro false</td>
		</tr>
	</tbody>
</table>

<p>Puedes ver el resultado de la mayoría de las combinaciones <a href="https://www.monografias.com/trabajos106/fundamentos-programacion-operadores/img6.png" target="_blank">aquí</a>.</p>

<h3>Ejercicio:</h3>

<p>Lee del teclado 2 valores boolean (true y false) y muestra el resultado de las 4 operaciones lógicas posibles sobre ellos. El ! hazlo sobre el primero de los valores booleanos.</p></body></html>