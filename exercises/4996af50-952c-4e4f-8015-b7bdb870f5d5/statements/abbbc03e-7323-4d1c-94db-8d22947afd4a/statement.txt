<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sometimes, instead of catching the exception as it occurs, we'll want to </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">"throw"</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> the exception back to the calling method.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">When a method uses a statement that can generate an exception, but said exception is not caught and handled by it, but is handled by the caller of the method, we say that </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">exception delegation has occurred.</font></font></strong></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">To establish this delegation, the type of exceptions that can be generated and that must be managed by whoever invokes said method is declared in the method header. </font><font style="vertical-align: inherit;">We will use the statement for this </font></font><code>throws</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">and after that word it is indicated what exceptions the method code can cause. </font><font style="vertical-align: inherit;">If an exception occurs in the method, the code exits that method and returns to the code from which the method was called. </font><font style="vertical-align: inherit;">There it will perch on the </font></font><code>catch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">appropriate one for that exception.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Example:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">We have modified the exception catching example so that the data reading is done in its own method, although the exception catching is still in the method </font></font><code>main</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, since the new method&nbsp; </font></font><code>leeTeclado</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">delegates the handling of the exceptions with </font></font><code>throws</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <blockquote> 
         <p><code>/*<br> &nbsp;* Ejercicio resuelto sobre manejo de excepciones.<br> &nbsp;* El programa solicita que el usuario introduzca por teclado<br> &nbsp;* un número entre 0 y 100, debiendo gestionarse la entrada<br> &nbsp;* por medio de excepciones.<br> &nbsp;*/</code></p> 
         <p><code>import java.io.*;</code></p> 
         <p><code>public class ejercicio_resuelto_excepciones {<br> &nbsp;&nbsp;&nbsp; public static void main(String[] args){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int numero=-1;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int intentos=0;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String linea;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedReader teclado = new BufferedReader(new InputStreamReader(System.in));<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print("Introduzca un número entre 0 y 100: ");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numero = leeTeclado(teclado);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(IOException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Error al leer del teclado.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(NumberFormatException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Debe introducir un número entre 0 y 100.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }finally{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intentos++;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }while (numero &lt; 0 || numero &gt; 100);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("El número introducido es: " + numero);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Número de intentos: " + intentos);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; private static int leeTeclado(BufferedReader teclado) <strong>throws NumberFormatException, IOException</strong> {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String linea = teclado.readLine();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int numero = Integer.parseInt(linea);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return numero;<br> &nbsp;&nbsp;&nbsp; }<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exercise:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">In the example corresponding to the section Read from the keyboard, the qualification in the Programming module that the user enters by keyboard is shown:</font></font></p> 
        <blockquote> 
         <p><code>import java.util.Scanner;</code></p> 
         <p><code>public class LecturaTeclado {</code></p> 
         <p><code>&nbsp; &nbsp; public static void main(String[] args) {<br> &nbsp; &nbsp; &nbsp; &nbsp; Scanner sc = new Scanner(System.in);<br> &nbsp; &nbsp; &nbsp; &nbsp; int miCalificacion = 0;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Dime la nota que me corresponde:");<br> &nbsp; &nbsp; &nbsp; &nbsp; miCalificacion = sc.nextInt();</code></p> 
         <p><code>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Mi nota en PROGRAMACION es: " + miCalificacion);<br> &nbsp; &nbsp; }</code></p> 
         <p><code>}</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modify the previous code by including a readKeyboard method, which delegates the </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=en&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/javase/8/docs/api/java/util/InputMismatchException.html"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">InputMismatchException</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> exception to the main method in case the user enters a float value.</font></font></p></body></html>