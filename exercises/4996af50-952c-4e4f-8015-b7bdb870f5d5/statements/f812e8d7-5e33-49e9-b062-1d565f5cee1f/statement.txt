<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Às vezes, em vez de capturar a exceção à medida que ela ocorre, queremos </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">"lançar"</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> a exceção de volta ao método de chamada.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Quando um método usa uma instrução que pode gerar uma exceção, mas essa exceção não é capturada e tratada por ela, mas sim pelo chamador do método, dizemos que </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ocorreu delegação de exceção.</font></font></strong></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Para estabelecer esta delegação, é declarado no cabeçalho do método o tipo de exceções que podem ser geradas e que devem ser gerenciadas por quem invoca o referido método. </font><font style="vertical-align: inherit;">Usaremos a instrução para isso </font></font><code>throws</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">e após essa palavra é indicado quais exceções o código do método pode causar. </font><font style="vertical-align: inherit;">Se ocorrer uma exceção no método, o código sai desse método e retorna ao código do qual o método foi chamado. </font><font style="vertical-align: inherit;">Lá ele vai pousar no </font></font><code>catch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">apropriado para essa exceção.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exemplo:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modificamos o exemplo de captura de exceção para que a leitura dos dados seja feita em seu próprio método, embora a captura de exceção ainda esteja no método </font></font><code>main</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, pois o novo método&nbsp; </font></font><code>leeTeclado</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">delega o tratamento das exceções com </font></font><code>throws</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <blockquote> 
         <p><code>/*<br> &nbsp;* Ejercicio resuelto sobre manejo de excepciones.<br> &nbsp;* El programa solicita que el usuario introduzca por teclado<br> &nbsp;* un número entre 0 y 100, debiendo gestionarse la entrada<br> &nbsp;* por medio de excepciones.<br> &nbsp;*/</code></p> 
         <p><code>import java.io.*;</code></p> 
         <p><code>public class ejercicio_resuelto_excepciones {<br> &nbsp;&nbsp;&nbsp; public static void main(String[] args){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int numero=-1;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int intentos=0;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String linea;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedReader teclado = new BufferedReader(new InputStreamReader(System.in));<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print("Introduzca un número entre 0 y 100: ");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numero = leeTeclado(teclado);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(IOException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Error al leer del teclado.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch(NumberFormatException e){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Debe introducir un número entre 0 y 100.");<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }finally{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intentos++;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }while (numero &lt; 0 || numero &gt; 100);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("El número introducido es: " + numero);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Número de intentos: " + intentos);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br> &nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; private static int leeTeclado(BufferedReader teclado) <strong>throws NumberFormatException, IOException</strong> {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String linea = teclado.readLine();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int numero = Integer.parseInt(linea);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return numero;<br> &nbsp;&nbsp;&nbsp; }<br> }</code></p> 
        </blockquote> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exercício:</font></font></h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">No exemplo correspondente à seção Ler do teclado, é mostrada a qualificação no módulo de Programação que o usuário insere pelo teclado:</font></font></p> 
        <blockquote> 
         <p><code>import java.util.Scanner;</code></p> 
         <p><code>public class LecturaTeclado {</code></p> 
         <p><code>&nbsp; &nbsp; public static void main(String[] args) {<br> &nbsp; &nbsp; &nbsp; &nbsp; Scanner sc = new Scanner(System.in);<br> &nbsp; &nbsp; &nbsp; &nbsp; int miCalificacion = 0;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Dime la nota que me corresponde:");<br> &nbsp; &nbsp; &nbsp; &nbsp; miCalificacion = sc.nextInt();</code></p> 
         <p><code>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Mi nota en PROGRAMACION es: " + miCalificacion);<br> &nbsp; &nbsp; }</code></p> 
         <p><code>}</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modifique o código anterior incluindo um método readKeyboard, que delega a exceção </font></font><a href="https://translate.google.com/website?sl=es&amp;tl=pt&amp;hl=es&amp;client=webapp&amp;u=https://docs.oracle.com/javase/8/docs/api/java/util/InputMismatchException.html"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">InputMismatchException</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ao método principal caso o usuário insira um valor flutuante.</font></font></p></body></html>