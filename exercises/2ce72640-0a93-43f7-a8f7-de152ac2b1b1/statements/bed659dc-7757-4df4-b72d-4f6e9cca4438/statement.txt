<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modificadores de acesso.</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Os modificadores de acesso controlam quais classes e objetos têm acesso às classes, propriedades e métodos nos quais estão incluídos.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modificadores de acesso na declaração de </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">classe</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> :</font></font></h3> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: A classe, assim como os objetos instanciados dessa classe, são acessíveis por qualquer outra classe.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> A classe, assim como os objetos instanciados dessa classe, são acessíveis apenas por classes que são declaradas no mesmo pacote.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Modificadores de acesso para </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">propriedades</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> e </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">métodos</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> :</font></font></p> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: A propriedade ou método é acessível de qualquer outra classe.</font></font></li> 
         <li><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: A propriedade ou método só é acessível a partir da classe na qual foi declarado.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> A propriedade ou método só é acessível por classes declaradas no mesmo pacote.</font></font></li> 
         <li><code>protected</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: A propriedade ou método é acessível a partir das classes do pacote e das subclasses.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Em todos os exercícios que estamos desenvolvendo, estamos utilizando os dois modificadores de acesso para as classes ( </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">e </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ), pois dissemos que várias classes poderiam ser incluídas no mesmo arquivo, mas apenas uma delas poderia ser declarada como </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vamos nos concentrar por enquanto. </font><font style="vertical-align: inherit;">na diferenciação dos atributos </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">e </font></font><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">com um exemplo.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exemplo:</font></font></h3> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; public class OOP_ejemplos {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SubClase miObj1 = new SubClase(8);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; miObj1.y = 7; //miObj1.x = 7 devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(miObj1.suma()); // suma(9, 7) devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; class SubClase {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int y;</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int suma() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return x + y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int suma(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return _x + _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">No código acima, podemos ver que:</font></font></p> 
        <ul> 
         <li>Si queremos asignar un valor a <code>x</code>, necesitamos hacerlo desde el constructor, ya que posteriormente no podríamos modificar su valor, al estar declarada como privada.</li> 
         <li>La propiedad <code>y</code> sí puede ser accedida y modificada desde cualquier otra clase, sin necesidad de ser inicializada en el constructor.</li> 
         <li>El método <code>suma(int _x, int _y)</code> no puede ser utilizado desde el exterior de la clase, por lo que hay que utilizar el método <code>suma()</code> habiendo inicializado previamente las propiedades a través del constructor con parámetros.</li> 
        </ul> 
        <h3>Ejercicio:</h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Com base no código de exemplo, tenha o valor das duas propriedades lidas do teclado no método main(). </font><font style="vertical-align: inherit;">Faça também com que o método intervenha no cálculo da soma das duas propriedades </font></font><code>private int suma(int _x, int _y)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, tendo em conta que este método só pode ser utilizado a partir da própria classe.</font></font></p> 
        <p><small><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Observação:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> remova também os comentários do código.</font></font></small></p></body></html>