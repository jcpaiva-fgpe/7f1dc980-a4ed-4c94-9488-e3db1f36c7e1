<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Åtkomstmodifierare.</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Åtkomstmodifierare styr vilka klasser och objekt som har tillgång till klasserna, egenskaperna och metoderna där de ingår.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Åtkomstmodifierare i </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">klassdeklarationen</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> :</font></font></h3> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Klassen, såväl som de instansierade objekten i den klassen, är tillgängliga för alla andra klasser.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Klassen, såväl som de instansierade objekten i den klassen, är endast tillgängliga för klasser som är deklarerade i samma paket.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Åtkomstmodifierare för </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">egenskaper</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> och </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">metoder</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> :</font></font></p> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Egenskapen eller metoden är tillgänglig från vilken annan klass som helst.</font></font></li> 
         <li><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Egenskapen eller metoden är endast tillgänglig från klassen där den är deklarerad.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Egenskapen eller metoden är endast tillgänglig för klasser som är deklarerade i samma paket.</font></font></li> 
         <li><code>protected</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Egenskapen eller metoden är tillgänglig från klasserna i paketet och från underklasserna.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">I alla övningar som vi utvecklar använder vi de två åtkomstmodifierarna för klasserna ( </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">och </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">standard</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ), eftersom vi sa att flera klasser kunde inkluderas i samma fil, men bara en av dem kunde deklareras som </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Vi fokuserar nu. </font><font style="vertical-align: inherit;">i att särskilja attributen </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">och </font></font><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">med ett exempel.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Exempel:</font></font></h3> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; public class OOP_ejemplos {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SubClase miObj1 = new SubClase(8);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; miObj1.y = 7; //miObj1.x = 7 devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(miObj1.suma()); // suma(9, 7) devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; class SubClase {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int y;</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int suma() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return x + y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int suma(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return _x + _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">I koden ovan kan vi se att:</font></font></p> 
        <ul> 
         <li>Si queremos asignar un valor a <code>x</code>, necesitamos hacerlo desde el constructor, ya que posteriormente no podríamos modificar su valor, al estar declarada como privada.</li> 
         <li>La propiedad <code>y</code> sí puede ser accedida y modificada desde cualquier otra clase, sin necesidad de ser inicializada en el constructor.</li> 
         <li>El método <code>suma(int _x, int _y)</code> no puede ser utilizado desde el exterior de la clase, por lo que hay que utilizar el método <code>suma()</code> habiendo inicializado previamente las propiedades a través del constructor con parámetros.</li> 
        </ul> 
        <h3>Ejercicio:</h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bygg på exempelkoden och läs värdet av de två egenskaperna från tangentbordet i main()-metoden. </font><font style="vertical-align: inherit;">Låt också metoden ingripa i beräkningen av summan av de två egenskaperna </font></font><code>private int suma(int _x, int _y)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">, med tanke på att denna metod endast kan användas från själva klassen.</font></font></p> 
        <p><small><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Obs:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Ta även bort kommentarer från koden.</font></font></small></p></body></html>