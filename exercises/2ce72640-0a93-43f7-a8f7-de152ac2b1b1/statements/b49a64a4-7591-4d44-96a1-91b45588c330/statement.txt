<!DOCTYPE html><html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Page Title</title><meta name='viewport' content='width=device-width, initial-scale=1'><link rel='stylesheet' type='text/css' media='screen' href='main.css'><script src='main.js'></script></head><body><h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Erişim değiştiricileri.</font></font></h2> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Erişim değiştiricileri, hangi sınıfların ve nesnelerin dahil edildikleri sınıflara, özelliklere ve yöntemlere erişimi olduğunu kontrol eder.</font></font></p> 
        <h3><font style="vertical-align: inherit;"></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sınıf</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> bildirimindeki değiştiricilere erişin </font><font style="vertical-align: inherit;">:</font></font></h3> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Sınıfın yanı sıra o sınıfın somutlaştırılmış nesnelerine başka herhangi bir sınıf tarafından erişilebilir.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">varsayılan:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Sınıfa ve o sınıfın somutlaştırılmış nesnelerine yalnızca aynı pakette bildirilen sınıflar tarafından erişilebilir.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Özellikler</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ve </font></font><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">yöntemler</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> için değiştiricilere erişin </font><font style="vertical-align: inherit;">:</font></font></p> 
        <ul> 
         <li><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Özelliğe veya yönteme başka herhangi bir sınıftan erişilebilir.</font></font></li> 
         <li><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Özellik veya yönteme yalnızca bildirildiği sınıftan erişilebilir.</font></font></li> 
         <li><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">varsayılan:</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Özelliğe veya yönteme yalnızca aynı pakette bildirilen sınıflar tarafından erişilebilir.</font></font></li> 
         <li><code>protected</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">: Özellik veya yönteme paketin sınıflarından ve alt sınıflarından erişilebilir.</font></font></li> 
        </ul> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Geliştirmekte olduğumuz tüm alıştırmalarda, sınıflar ( </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ve </font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">default</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> ) için iki erişim değiştiricisini kullanıyoruz, çünkü aynı dosyaya birkaç sınıfın dahil edilebileceğini, ancak bunlardan yalnızca birinin </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Şimdilik odaklanacağız. </font><font style="vertical-align: inherit;">nitelikleri ayırt etmede </font></font><code>public</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ve </font></font><code>private</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">bir örnekle.</font></font></p> 
        <h3><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek:</font></font></h3> 
        <blockquote> 
         <p><code>&nbsp;&nbsp;&nbsp; public class OOP_ejemplos {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SubClase miObj1 = new SubClase(8);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; miObj1.y = 7; //miObj1.x = 7 devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(miObj1.suma()); // suma(9, 7) devolvería error de compilación<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp; class SubClase {</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int y;</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SubClase(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = _x;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int suma() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return x + y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p> 
         <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int suma(int _x, int _y) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return _x + _y;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br> &nbsp;&nbsp;&nbsp; }</code></p> 
        </blockquote> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Yukarıdaki kodda şunu görebiliriz:</font></font></p> 
        <ul> 
         <li>Si queremos asignar un valor a <code>x</code>, necesitamos hacerlo desde el constructor, ya que posteriormente no podríamos modificar su valor, al estar declarada como privada.</li> 
         <li>La propiedad <code>y</code> sí puede ser accedida y modificada desde cualquier otra clase, sin necesidad de ser inicializada en el constructor.</li> 
         <li>El método <code>suma(int _x, int _y)</code> no puede ser utilizado desde el exterior de la clase, por lo que hay que utilizar el método <code>suma()</code> habiendo inicializado previamente las propiedades a través del constructor con parámetros.</li> 
        </ul> 
        <h3>Ejercicio:</h3> 
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Örnek kodu temel alarak, main() yönteminde klavyeden okunan iki özelliğin değerine sahip olun. </font></font><code>private int suma(int _x, int _y)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Ayrıca , bu yöntemin yalnızca sınıfın kendisinden kullanılabileceğini akılda tutarak, </font><font style="vertical-align: inherit;">iki özelliğin toplamının hesaplanmasına yöntemin müdahale etmesini sağlayın .</font></font></p> 
        <p><small><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Not:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> Ayrıca yorumları koddan kaldırın.</font></font></small></p></body></html>